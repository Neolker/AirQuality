[
    {
        "id": "2c41a2bd.aa36ae",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "6775101731c5bd80",
        "type": "group",
        "z": "2c41a2bd.aa36ae",
        "name": "Dashboard",
        "style": {
            "stroke": "#0070c0",
            "fill": "#bfdbef",
            "fill-opacity": "0.6",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "ead6ab588ac012a1",
            "3fa03634d1f7ddbc",
            "1be6d9d5b1b90247",
            "3a33b4e58dd32e33",
            "1bcf4e79217f1295"
        ],
        "x": 374,
        "y": 19,
        "w": 212,
        "h": 242
    },
    {
        "id": "e12e191d879e2850",
        "type": "group",
        "z": "2c41a2bd.aa36ae",
        "name": "MQTT Inputs",
        "style": {
            "stroke": "#6f2fa0",
            "fill": "#dbcbe7",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cb57c0e6bf95f05e",
            "89d1850ab8de6df8",
            "874b88a04f80ba22",
            "effd0ae8aad650f5",
            "178905324401a626"
        ],
        "x": 14,
        "y": 19,
        "w": 212,
        "h": 322
    },
    {
        "id": "fe317d2a84d43cfa",
        "type": "group",
        "z": "2c41a2bd.aa36ae",
        "name": "Data retention in Buffer DB",
        "style": {
            "stroke": "#ffC000",
            "fill": "#ffefbf",
            "fill-opacity": "0.5",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "cbf82508.506aa8",
            "4d7282eb.906e7c",
            "cf880a4bd7c17c1f",
            "2ac12283fedaf804",
            "4c1e4d25361f416c",
            "60180a63a1bf7c34",
            "d334c622ea183440",
            "8018a036369c18dc"
        ],
        "x": 374,
        "y": 299,
        "w": 852,
        "h": 242
    },
    {
        "id": "d33e588d2ee054ba",
        "type": "group",
        "z": "2c41a2bd.aa36ae",
        "name": "AVG and trends from buffer to main data",
        "style": {
            "stroke": "#ff0000",
            "fill": "#ffbfbf",
            "label": true,
            "color": "#000000"
        },
        "nodes": [
            "a104cb68d61cceeb",
            "b85777d87f329a77",
            "dfb8b306b972216e",
            "c5ec9714874e40f6",
            "475cf5302ea30f27",
            "156cefd656a81fcb",
            "cd8a5b101869bf7e",
            "15b65a6acb2a0303"
        ],
        "x": 14,
        "y": 579,
        "w": 1032,
        "h": 142
    },
    {
        "id": "cbf82508.506aa8",
        "type": "debug",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 380,
        "wires": []
    },
    {
        "id": "4d7282eb.906e7c",
        "type": "mysql",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "mydb": "aaf3d3de7c4e5dd8",
        "name": "",
        "x": 930,
        "y": 380,
        "wires": [
            [
                "cbf82508.506aa8"
            ]
        ]
    },
    {
        "id": "cb57c0e6bf95f05e",
        "type": "mqtt in",
        "z": "2c41a2bd.aa36ae",
        "g": "e12e191d879e2850",
        "name": "CO2",
        "topic": "node/generic-node:0/co2-meter/-/concentration",
        "qos": "2",
        "datatype": "json",
        "broker": "29fba84a.b2af58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 180,
        "wires": [
            [
                "ead6ab588ac012a1",
                "2ac12283fedaf804"
            ]
        ]
    },
    {
        "id": "89d1850ab8de6df8",
        "type": "mqtt in",
        "z": "2c41a2bd.aa36ae",
        "g": "e12e191d879e2850",
        "name": "BatteryVoltage",
        "topic": "node/generic-node:0/battery/-/voltage",
        "qos": "2",
        "datatype": "json",
        "broker": "29fba84a.b2af58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 120,
        "wires": [
            [
                "1be6d9d5b1b90247",
                "60180a63a1bf7c34"
            ]
        ]
    },
    {
        "id": "874b88a04f80ba22",
        "type": "mqtt in",
        "z": "2c41a2bd.aa36ae",
        "g": "e12e191d879e2850",
        "name": "SerialNumber",
        "topic": "node/generic-node:0/serial",
        "qos": "2",
        "datatype": "json",
        "broker": "29fba84a.b2af58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 60,
        "wires": [
            [
                "3fa03634d1f7ddbc",
                "4c1e4d25361f416c"
            ]
        ]
    },
    {
        "id": "ead6ab588ac012a1",
        "type": "ui_gauge",
        "z": "2c41a2bd.aa36ae",
        "g": "6775101731c5bd80",
        "name": "CO2",
        "group": "57ff470b.93fdf8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "CO2",
        "label": "ppm",
        "format": "{{value}} ppm",
        "min": 0,
        "max": "3000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "500",
        "seg2": "1000",
        "diff": false,
        "className": "",
        "x": 450,
        "y": 140,
        "wires": []
    },
    {
        "id": "3fa03634d1f7ddbc",
        "type": "ui_text",
        "z": "2c41a2bd.aa36ae",
        "g": "6775101731c5bd80",
        "group": "57ff470b.93fdf8",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "Serial Number",
        "label": "Serial Number",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 60,
        "wires": []
    },
    {
        "id": "1be6d9d5b1b90247",
        "type": "ui_text",
        "z": "2c41a2bd.aa36ae",
        "g": "6775101731c5bd80",
        "group": "57ff470b.93fdf8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Battery Voltage",
        "label": "Battery Voltage",
        "format": "{{msg.payload}} V",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 480,
        "y": 100,
        "wires": []
    },
    {
        "id": "cf880a4bd7c17c1f",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Create new line into buffer",
        "func": "let bat=global.get(\"battery\");\nlet co2 = global.get(\"co2\");\nlet temp = global.get(\"temperature\");\nlet pos = global.get(\"position\");\nlet serial = \"undefined\";\nlet serialGlobal = global.get(\"serial\");\nif (serialGlobal.length>5){\n    serial = serialGlobal;\n    }\nmsg.topic = \"INSERT INTO buffer (ts,serial_number,co2,temperature,humidity,battery,position) VALUES (?,?,?,?,?,?,?)\";\nmsg.payload=[Math.floor(Date.now() / 1000),serial,co2,temp,0,bat,pos];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 380,
        "wires": [
            [
                "4d7282eb.906e7c"
            ]
        ]
    },
    {
        "id": "2ac12283fedaf804",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Global co2 set",
        "func": "global.set(\"co2\",  parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "4c1e4d25361f416c",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Global serial set",
        "func": "global.set(\"serial\",  msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a104cb68d61cceeb",
        "type": "debug",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "name": "msg.payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 680,
        "wires": []
    },
    {
        "id": "b85777d87f329a77",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "name": "SELECT buffer",
        "func": "msg.topic = \"SELECT * FROM buffer ORDER BY ts ASC\";\nmsg.payload=[];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 620,
        "wires": [
            [
                "c5ec9714874e40f6"
            ]
        ]
    },
    {
        "id": "dfb8b306b972216e",
        "type": "inject",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "name": "Timer 30 sec.",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "b85777d87f329a77"
            ]
        ]
    },
    {
        "id": "60180a63a1bf7c34",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Global battery set",
        "func": "global.set(\"battery\",  parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "cf880a4bd7c17c1f"
            ]
        ]
    },
    {
        "id": "c5ec9714874e40f6",
        "type": "mysql",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "mydb": "aaf3d3de7c4e5dd8",
        "name": "",
        "x": 510,
        "y": 620,
        "wires": [
            [
                "475cf5302ea30f27"
            ]
        ]
    },
    {
        "id": "475cf5302ea30f27",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "name": "Insert into main data",
        "func": "let battery=0;\nlet position=0;\n//co2\nlet trend_co2=0;\nlet last_co2=0;\nlet sum_co2=0;\nlet count_co2=0;\nlet avg_co2=0;\nlet serial=\"xxx\";\n//temp\nlet trend_temp=0;\nlet last_temp=0;\nlet sum_temp=0;\nlet count_temp=0;\nlet avg_temp=0;\nif(msg.payload.length > 0){\n    msg.payload.forEach((element) => {     \n        //batt\n        battery=element.battery;\n        //co2\n        if(last_co2<element.co2){trend_co2=1;}\n        else if(last_co2>element.co2){trend_co2=(-1);}   \n        else{trend_co2=0;}\n        last_co2=element.co2;\n        sum_co2+=element.co2;         \n        count_co2++;\n        //temp\n        if(last_temp<element.temperature){trend_temp=1;}\n        else if(last_temp>element.temperature){trend_temp=(-1);}   \n        else{trend_temp=0;}\n        last_temp=element.temperature;\n        sum_temp+=element.temperature;         \n        count_temp++;\n        //serial\n        serial=element.serial_number;     \n        //position\n        position=element.position;\n        });\n    if(count_co2>0){\n        avg_co2=(sum_co2/count_co2);\n        }\n    if (count_temp >0){\n        avg_temp = (sum_temp / count_temp);\n        }\n    }\nmsg.topic = \"INSERT INTO main_data (unix_ts,serial_number,co2_avg,co2_trend,temp_avg,temp_trend,battery,position) VALUES (?,?,?,?,?,?,?,?)\";\nmsg.payload = [Math.floor(Date.now() / 1000), serial, avg_co2, trend_co2, avg_temp, trend_temp,battery,position];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 620,
        "wires": [
            [
                "156cefd656a81fcb"
            ]
        ]
    },
    {
        "id": "156cefd656a81fcb",
        "type": "mysql",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "mydb": "aaf3d3de7c4e5dd8",
        "name": "",
        "x": 930,
        "y": 620,
        "wires": [
            [
                "cd8a5b101869bf7e"
            ]
        ]
    },
    {
        "id": "cd8a5b101869bf7e",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "name": "clear buffer",
        "func": "msg.topic = \"TRUNCATE buffer\";\nmsg.payload = [];\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 680,
        "wires": [
            [
                "15b65a6acb2a0303"
            ]
        ]
    },
    {
        "id": "15b65a6acb2a0303",
        "type": "mysql",
        "z": "2c41a2bd.aa36ae",
        "g": "d33e588d2ee054ba",
        "mydb": "aaf3d3de7c4e5dd8",
        "name": "",
        "x": 310,
        "y": 680,
        "wires": [
            [
                "a104cb68d61cceeb"
            ]
        ]
    },
    {
        "id": "effd0ae8aad650f5",
        "type": "mqtt in",
        "z": "2c41a2bd.aa36ae",
        "g": "e12e191d879e2850",
        "name": "Temperature",
        "topic": "node/generic-node:0/thermometer/0:1/temperature",
        "qos": "2",
        "datatype": "json",
        "broker": "29fba84a.b2af58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 240,
        "wires": [
            [
                "3a33b4e58dd32e33",
                "d334c622ea183440"
            ]
        ]
    },
    {
        "id": "3a33b4e58dd32e33",
        "type": "ui_gauge",
        "z": "2c41a2bd.aa36ae",
        "g": "6775101731c5bd80",
        "name": "Temperature",
        "group": "57ff470b.93fdf8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Temperature",
        "label": "°C",
        "format": "{{value}} °C",
        "min": "0",
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "30",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 180,
        "wires": []
    },
    {
        "id": "d334c622ea183440",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Global temperature set",
        "func": "global.set(\"temperature\",  parseFloat(msg.payload));\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "178905324401a626",
        "type": "mqtt in",
        "z": "2c41a2bd.aa36ae",
        "g": "e12e191d879e2850",
        "name": "Position",
        "topic": "node/generic-node:0/orientation",
        "qos": "2",
        "datatype": "json",
        "broker": "29fba84a.b2af58",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 300,
        "wires": [
            [
                "1bcf4e79217f1295",
                "8018a036369c18dc"
            ]
        ]
    },
    {
        "id": "1bcf4e79217f1295",
        "type": "ui_gauge",
        "z": "2c41a2bd.aa36ae",
        "g": "6775101731c5bd80",
        "name": "Position",
        "group": "57ff470b.93fdf8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "compass",
        "title": "Position",
        "label": "",
        "format": "{{value-1}}",
        "min": "0",
        "max": "5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "25",
        "diff": false,
        "className": "",
        "x": 460,
        "y": 220,
        "wires": []
    },
    {
        "id": "8018a036369c18dc",
        "type": "function",
        "z": "2c41a2bd.aa36ae",
        "g": "fe317d2a84d43cfa",
        "name": "Global position set",
        "func": "global.set(\"position\",  parseInt(msg.payload)-1);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "aaf3d3de7c4e5dd8",
        "type": "MySQLdatabase",
        "name": "AirQualityHubDB",
        "host": "localhost",
        "port": "3306",
        "db": "air_quiality_hub",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "29fba84a.b2af58",
        "type": "mqtt-broker",
        "name": "",
        "broker": "127.0.0.1",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "57ff470b.93fdf8",
        "type": "ui_group",
        "name": "AirQuality",
        "tab": "11207769.c31889",
        "order": 1,
        "disp": true,
        "width": "7",
        "collapse": false,
        "className": ""
    },
    {
        "id": "11207769.c31889",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard"
    }
]
